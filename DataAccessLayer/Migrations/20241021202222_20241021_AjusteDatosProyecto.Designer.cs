// <auto-generated />
using System;
using DataAccessLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(DataAccesContext))]
    [Migration("20241021202222_20241021_AjusteDatosProyecto")]
    partial class _20241021_AjusteDatosProyecto
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EntityLayer.Concrete.Alerta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("lectura")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Alertas");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Brief", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeterminarEstadoEstadoId")
                        .HasColumnType("int");

                    b.Property<string>("DirigidoA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusBriefId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Objetivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PlanComunicacion")
                        .HasColumnType("bit");

                    b.Property<string>("RutaArchivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoBriefId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstatusBriefId");

                    b.HasIndex("TipoBriefId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Briefs");
                });

            modelBuilder.Entity("EntityLayer.Concrete.ClasificacionProyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("clasificacionProyectos");
                });

            modelBuilder.Entity("EntityLayer.Concrete.EstatusBrief", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstatusBriefs");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AudienciaId")
                        .HasColumnType("int");

                    b.Property<int>("BriefId")
                        .HasColumnType("int");

                    b.Property<string>("Ciclo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormatoId")
                        .HasColumnType("int");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PCNId")
                        .HasColumnType("int");

                    b.Property<int>("PrioridadId")
                        .HasColumnType("int");

                    b.Property<string>("Proceso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Produccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BriefId");

                    b.ToTable("Materiales");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Icono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("Ruta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Proyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BriefId")
                        .HasColumnType("int");

                    b.Property<int>("ClasificacionProyectoId")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<bool>("RequierePlan")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BriefId")
                        .IsUnique();

                    b.HasIndex("ClasificacionProyectoId");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("EntityLayer.Concrete.TipoBrief", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposBrief");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CambioContrasena")
                        .HasColumnType("bit");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<bool>("SolicitudRegistro")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Correo")
                        .IsUnique();

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Brief", b =>
                {
                    b.HasOne("EntityLayer.Concrete.EstatusBrief", "EstatusBrief")
                        .WithMany("Briefs")
                        .HasForeignKey("EstatusBriefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.TipoBrief", "TipoBrief")
                        .WithMany("Briefs")
                        .HasForeignKey("TipoBriefId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.Usuario", "Usuario")
                        .WithMany("Briefs")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstatusBrief");

                    b.Navigation("TipoBrief");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Material", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Brief", "Brief")
                        .WithMany("Materiales")
                        .HasForeignKey("BriefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brief");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Menu", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Rol", "Rol")
                        .WithMany("Menus")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Proyecto", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Brief", "Brief")
                        .WithOne("Proyecto")
                        .HasForeignKey("EntityLayer.Concrete.Proyecto", "BriefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.ClasificacionProyecto", "ClasificacionProyecto")
                        .WithMany("Proyectos")
                        .HasForeignKey("ClasificacionProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brief");

                    b.Navigation("ClasificacionProyecto");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Usuario", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Rol", "UserRol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRol");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Brief", b =>
                {
                    b.Navigation("Materiales");

                    b.Navigation("Proyecto")
                        .IsRequired();
                });

            modelBuilder.Entity("EntityLayer.Concrete.ClasificacionProyecto", b =>
                {
                    b.Navigation("Proyectos");
                });

            modelBuilder.Entity("EntityLayer.Concrete.EstatusBrief", b =>
                {
                    b.Navigation("Briefs");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Rol", b =>
                {
                    b.Navigation("Menus");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("EntityLayer.Concrete.TipoBrief", b =>
                {
                    b.Navigation("Briefs");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Usuario", b =>
                {
                    b.Navigation("Briefs");
                });
#pragma warning restore 612, 618
        }
    }
}
